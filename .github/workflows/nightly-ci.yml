name: MekHQ Nightly CI

on:
  schedule:
    - cron: "0 0 * * *"

env:
  GRADLE_OPTS: "-Dscan.link.VCS=https://github.com/MegaMek/mekhq/commit/${{ github.sha }}"

jobs:
  nightly_ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        java-distribution: [temurin]
        java-version: [17]
      fail-fast: false

    name: Nightly MekHQ CI ${{ matrix.os }} on ${{ matrix.java-distribution }} JDK ${{ matrix.java-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          path: mekhq

      - name: Checkout MegaMek
        uses: actions/checkout@v4
        with:
          repository: MegaMek/megamek
          path: megamek

      - name: Checkout MegaMekLab
        uses: actions/checkout@v4
        with:
          repository: MegaMek/megameklab
          path: megameklab

      - name: Set up ${{ matrix.java-distribution }} JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.java-distribution }}
          java-version: ${{ matrix.java-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Build with Gradle
        working-directory: megameklab
        run: ./gradlew clean build --stacktrace --scan

      - name: Upload Test Logs on Failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.os }}-${{ matrix.java-distribution }}-jdk${{ matrix.java-version }}-ci-failure-logs
          path: mekhq/MekHQ/build/reports/

      - name: Upload Nix/Mac Releases
        uses: actions/upload-artifact@v4
        with:
          name: mhq-release-nix-mac-${{ matrix.java-distribution }}-jdk${{ matrix.java-version }}
          path: mekhq/MekHQ/build/distributions/mekhq-unix-*.tar.gz

      - name: Upload Windows Release
        uses: actions/upload-artifact@v4
        with:
          name: mhq-release-win-${{ matrix.java-distribution }}-jdk${{ matrix.java-version }}
          path: mekhq/MekHQ/build/distributions/mekhq-windows-*.zip
