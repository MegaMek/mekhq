# Copyright (C) 2005-2025 The MegaMek Team. All Rights Reserved.
#
# This file is part of MekHQ.
#
# MekHQ is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License (GPL),
# version 3 or (at your option) any later version,
# as published by the Free Software Foundation.
#
# MekHQ is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# A copy of the GPL should have been included with this project;
# if not, see <https://www.gnu.org/licenses/>.
#
# NOTICE: The MegaMek organization is a non-profit group of volunteers
# creating free software for the BattleTech community.
#
# MechWarrior, BattleMech, `Mech and AeroTech are registered trademarks
# of The Topps Company, Inc. All Rights Reserved.
#
# Catalyst Game Labs and the Catalyst Game Labs logo are trademarks of
# InMediaRes Productions, LLC.
#
# MechWarrior Copyright Microsoft Corporation. MegaMek was created under
# Microsoft's "Game Content Usage Rules"
# <https://www.xbox.com/en-US/developers/rules> and it is not endorsed by or
# affiliated with Microsoft.
# This is used to store any mekhq/campaign/universe Resources
## General Universe Resources
## Enums
# Alphabet Enum - This is sorted by the grouping then letter, not in the same order as they are listed in the enum, because it is more readable this way.
Alphabets.A.ccb1943.text=Able
Alphabets.B.ccb1943.text=Baker
Alphabets.C.ccb1943.text=Charlie
Alphabets.D.ccb1943.text=Dog
Alphabets.E.ccb1943.text=Easy
Alphabets.F.ccb1943.text=Fox
Alphabets.G.ccb1943.text=George
Alphabets.H.ccb1943.text=How
Alphabets.I.ccb1943.text=Item
Alphabets.J.ccb1943.text=Jig
Alphabets.K.ccb1943.text=King
Alphabets.L.ccb1943.text=Love
Alphabets.M.ccb1943.text=Mike
Alphabets.N.ccb1943.text=Nan
Alphabets.O.ccb1943.text=Oboe
Alphabets.P.ccb1943.text=Peter
Alphabets.Q.ccb1943.text=Queen
Alphabets.R.ccb1943.text=Roger
Alphabets.S.ccb1943.text=Sugar
Alphabets.T.ccb1943.text=Tare
Alphabets.U.ccb1943.text=Uncle
Alphabets.V.ccb1943.text=Victor
Alphabets.W.ccb1943.text=William
Alphabets.X.ccb1943.text=Xray
Alphabets.Y.ccb1943.text=Yoke
Alphabets.Z.ccb1943.text=Zebra
Alphabets.A.icao1956.text=Alfa
Alphabets.B.icao1956.text=Bravo
Alphabets.C.icao1956.text=Charlie
Alphabets.D.icao1956.text=Delta
Alphabets.E.icao1956.text=Echo
Alphabets.F.icao1956.text=Foxtrot
Alphabets.G.icao1956.text=Golf
Alphabets.H.icao1956.text=Hotel
Alphabets.I.icao1956.text=India
Alphabets.J.icao1956.text=Juliett
Alphabets.K.icao1956.text=Kilo
Alphabets.L.icao1956.text=Lima
Alphabets.M.icao1956.text=Mike
Alphabets.N.icao1956.text=November
Alphabets.O.icao1956.text=Oscar
Alphabets.P.icao1956.text=Papa
Alphabets.Q.icao1956.text=Quebec
Alphabets.R.icao1956.text=Romeo
Alphabets.S.icao1956.text=Sierra
Alphabets.T.icao1956.text=Tango
Alphabets.U.icao1956.text=Uniform
Alphabets.V.icao1956.text=Victor
Alphabets.W.icao1956.text=Whiskey
Alphabets.X.icao1956.text=Xray
Alphabets.Y.icao1956.text=Yankee
Alphabets.Z.icao1956.text=Zulu
Alphabets.A.english.text=A
Alphabets.B.english.text=B
Alphabets.C.english.text=C
Alphabets.D.english.text=D
Alphabets.E.english.text=E
Alphabets.F.english.text=F
Alphabets.G.english.text=G
Alphabets.H.english.text=H
Alphabets.I.english.text=I
Alphabets.J.english.text=J
Alphabets.K.english.text=K
Alphabets.L.english.text=L
Alphabets.M.english.text=M
Alphabets.N.english.text=N
Alphabets.O.english.text=O
Alphabets.P.english.text=P
Alphabets.Q.english.text=Q
Alphabets.R.english.text=R
Alphabets.S.english.text=S
Alphabets.T.english.text=T
Alphabets.U.english.text=U
Alphabets.V.english.text=V
Alphabets.W.english.text=W
Alphabets.X.english.text=X
Alphabets.Y.english.text=Y
Alphabets.Z.english.text=Z
Alphabets.A.greek.text=Alpha
Alphabets.B.greek.text=Beta
Alphabets.C.greek.text=Gamma
Alphabets.D.greek.text=Delta
Alphabets.E.greek.text=Epsilon
Alphabets.F.greek.text=Zeta
Alphabets.G.greek.text=Eta
Alphabets.H.greek.text=Theta
Alphabets.I.greek.text=Iota
Alphabets.J.greek.text=Kappa
Alphabets.K.greek.text=Lambda
Alphabets.L.greek.text=Mu
Alphabets.M.greek.text=Nu
Alphabets.N.greek.text=Xi
Alphabets.O.greek.text=Omicron
Alphabets.P.greek.text=Pi
Alphabets.Q.greek.text=Rho
Alphabets.R.greek.text=Sigma
Alphabets.S.greek.text=Tau
Alphabets.T.greek.text=Upsilon
Alphabets.U.greek.text=Phi
Alphabets.V.greek.text=Chi
Alphabets.W.greek.text=Psi
Alphabets.X.greek.text=Omega
Alphabets.Y.greek.text=Ena
Alphabets.Z.greek.text=Dio
# BattleMekFactionGenerationMethod Enum
BattleMekFactionGenerationMethod.ORIGIN_FACTION.text=Origin Faction
BattleMekFactionGenerationMethod.ORIGIN_FACTION.toolTipText=This generates BattleMeks using the individual people's origin faction's RATs.
BattleMekFactionGenerationMethod.CAMPAIGN_FACTION.text=Campaign Faction
BattleMekFactionGenerationMethod.CAMPAIGN_FACTION.toolTipText=This generates BattleMeks using the campaign's faction's RATs.
BattleMekFactionGenerationMethod.SPECIFIED_FACTION.text=Specified Faction
BattleMekFactionGenerationMethod.SPECIFIED_FACTION.toolTipText=This generates BattleMeks using the specified faction's RATs.
# BattleMekQualityGenerationMethod Enum
BattleMekQualityGenerationMethod.AGAINST_THE_BOT.text=AtB
BattleMekQualityGenerationMethod.AGAINST_THE_BOT.toolTipText=<html>This follows the AtB rules for base quality generation. <br>Generates (before modifiers): 28% F, 44% D, 19% C, 6% B, 3% A.</html>
BattleMekQualityGenerationMethod.WINDCHILD.text=Windchild
BattleMekQualityGenerationMethod.WINDCHILD.toolTipText=<html>This is a variant of the AtB method that generates a higher base quality. <br>Generates (before modifiers): 17% F, 25% D, 31% C, 19% B, 8% A.</html>
BattleMekQualityGenerationMethod.F.text=F
BattleMekQualityGenerationMethod.F.toolTipText=This generates a force solely containing units of F quality.
BattleMekQualityGenerationMethod.D.text=D
BattleMekQualityGenerationMethod.D.toolTipText=This generates a force solely containing units of D quality.
BattleMekQualityGenerationMethod.C.text=C
BattleMekQualityGenerationMethod.C.toolTipText=This generates a force solely containing units of C quality.
BattleMekQualityGenerationMethod.B.text=B
BattleMekQualityGenerationMethod.B.toolTipText=This generates a force solely containing units of B quality.
BattleMekQualityGenerationMethod.A.text=A
BattleMekQualityGenerationMethod.A.toolTipText=This generates a force solely containing units of A quality.
BattleMekQualityGenerationMethod.A_STAR.text=A*
BattleMekQualityGenerationMethod.A_STAR.toolTipText=This generates a force solely containing units of A* quality.
# BattleMekWeightClassGenerationMethod Enum
BattleMekWeightClassGenerationMethod.AGAINST_THE_BOT.text=AtB
BattleMekWeightClassGenerationMethod.AGAINST_THE_BOT.toolTipText=<html>This follows the core AtB rules to generate a mercenary company. <br>Generates (before modifiers): 8% Nothing, 33% Light, 42% Medium, 14% Heavy, 3% Assault.</html>
BattleMekWeightClassGenerationMethod.WINDCHILD.text=Windchild
BattleMekWeightClassGenerationMethod.WINDCHILD.toolTipText=<html>This is a variant of the AtB Method that guarantees generating a valid BattleMek. As part of doing so, it creates a force weighted closer to the average Inner Sphere 'Mek weights in 3039. <br>Generates (before modifiers): 28% Light, 44% Medium, 19% Heavy, 8% Assault (rounded properly).</html>
BattleMekWeightClassGenerationMethod.WINDCHILD_LIGHT.text=Windchild (Light Force)
BattleMekWeightClassGenerationMethod.WINDCHILD_LIGHT.toolTipText=<html>This is a variant of the Windchild Method that creates a light force, weighted around light and medium 'Meks. <br>Generates (before modifiers): 50% Light, 31% Medium, 14% Heavy, 6% Assault (rounded normally).</html>
BattleMekWeightClassGenerationMethod.WINDCHILD_MEDIUM.text=Windchild (Medium Force)
BattleMekWeightClassGenerationMethod.WINDCHILD_MEDIUM.toolTipText=<html>This is a variant of the Windchild Method that creates a medium force, weighted around medium 'Meks. <br>Generates (before modifiers): 25% Light, 50% Medium, 19% Heavy, 6% Assault.</html>
BattleMekWeightClassGenerationMethod.WINDCHILD_HEAVY.text=Windchild (Heavy Force)
BattleMekWeightClassGenerationMethod.WINDCHILD_HEAVY.toolTipText=<html>This is a variant of the Windchild Method that creates a heavy force, weighted around medium and heavy 'Meks. <br>Generates (before modifiers): 17% Light, 31% Medium, 33% Heavy, 19% Assault.</html>
BattleMekWeightClassGenerationMethod.WINDCHILD_ASSAULT.text=Windchild (Assault Force)
BattleMekWeightClassGenerationMethod.WINDCHILD_ASSAULT.toolTipText=<html>This is a variant of the Windchild Method that creates an assault force, weighted around heavy and assault 'Meks. <br>Generates (before modifiers): 8% Light, 19% Medium, 33% Heavy, 39% Assault (rounded normally).</html>
BattleMekWeightClassGenerationMethod.LIGHT.text=Light
BattleMekWeightClassGenerationMethod.LIGHT.toolTipText=This generates a force containing just light 'Meks.
BattleMekWeightClassGenerationMethod.MEDIUM.text=Medium
BattleMekWeightClassGenerationMethod.MEDIUM.toolTipText=This generates a force containing just medium 'Meks.
BattleMekWeightClassGenerationMethod.HEAVY.text=Heavy
BattleMekWeightClassGenerationMethod.HEAVY.toolTipText=This generates a force containing just heavy 'Meks.
BattleMekWeightClassGenerationMethod.ASSAULT.text=Assault
BattleMekWeightClassGenerationMethod.ASSAULT.toolTipText=This generates a force containing just assault 'Meks.
# CompanyGenerationMethod Enum
CompanyGenerationMethod.AGAINST_THE_BOT.text=AtB
CompanyGenerationMethod.AGAINST_THE_BOT.toolTipText=This follows the core AtB rules to generate a mercenary company.
CompanyGenerationMethod.WINDCHILD.text=Windchild
CompanyGenerationMethod.WINDCHILD.toolTipText=This is a variant of the AtB Method that assigns the commanding officer a rank better fitting the force size, and handles BattleMek quality differently so that Clan 'Meks can generate from any quality.
# CompanyGenerationPersonType Enum
CompanyGenerationPersonType.MEKWARRIOR_COMPANY_COMMANDER.text=MekWarrior Company Commander
CompanyGenerationPersonType.MEKWARRIOR_COMPANY_COMMANDER.toolTipText=They are the MekWarrior who leads the entire Mercenary company.
CompanyGenerationPersonType.MEKWARRIOR_CAPTAIN.text=MekWarrior Captain
CompanyGenerationPersonType.MEKWARRIOR_CAPTAIN.toolTipText=They lead a BattleMek company from their BattleMek.
CompanyGenerationPersonType.MEKWARRIOR_LIEUTENANT.text=MekWarrior Lieutenant
CompanyGenerationPersonType.MEKWARRIOR_LIEUTENANT.toolTipText=They lead a BattleMek lance from their BattleMek.
CompanyGenerationPersonType.MEKWARRIOR.text=MekWarrior
CompanyGenerationPersonType.MEKWARRIOR.toolTipText=They pilot a BattleMek.
CompanyGenerationPersonType.SUPPORT.text=Support
CompanyGenerationPersonType.SUPPORT.toolTipText=They are one of the primary support personnel (techs, doctors, or administrators) for the Mercenary company.
CompanyGenerationPersonType.ASSISTANT.text=Assistant
CompanyGenerationPersonType.ASSISTANT.toolTipText=They assist one of the primary support personnel as a Medic or Astech.
# ForceNamingMethod Enum
ForceNamingMethod.CCB_1943.text=CCB (1943)
ForceNamingMethod.CCB_1943.toolTipText=<html>This generates names using the Combined Communications Board's WW2 calling alphabet as settled upon in 1943. <br>Produces names like "Able Lance", "Charlie Company", and "Easy Company".</html>
ForceNamingMethod.ICAO_1956.text=ICAO (1956)
ForceNamingMethod.ICAO_1956.toolTipText=<html>This generates names using the International Radiotelephony Spelling Alphabet, also known as the NATO phonetic alphabet. <br>Produces names like "Bravo Lance", "Charlie Company", and "Hotel Lance"</html>
ForceNamingMethod.ENGLISH_ALPHABET.text=English Alphabet
ForceNamingMethod.ENGLISH_ALPHABET.toolTipText=<html>This generates names using the English Alphabet. <br>Produces names like "A Lance", "V Company", and "X Lance".</html>
ForceNamingMethod.GREEK_ALPHABET.text=Greek Alphabet
ForceNamingMethod.GREEK_ALPHABET.toolTipText=<html>This generates names using the Greek Alphabet, with one and two taking the place of the final two characters as Greek only has 24 characters. <br>Produces names like "Alpha Lance", "Beta Company", and "Omega Lance".</html>
# MysteryBoxType Enum
MysteryBoxType.THIRD_SUCCESSION_WAR.text=Third Succession War Mystery Box
MysteryBoxType.THIRD_SUCCESSION_WAR.toolTipText=<html>This generates a random BattleMek and two to four parts based on the year 3000. <br>Expect a light to medium IntroTech BattleMek and some common equipment, but you can never tell what one might find salvageable on the battleground.</html>
MysteryBoxType.STAR_LEAGUE_ROYAL.text=Star League Royal Division Mystery Box
MysteryBoxType.STAR_LEAGUE_ROYAL.toolTipText=<html>This generates a random BattleMek and two to four parts based on the units of the Star League Royal Division. <br>Expect the best technology of the Star League and their preferred 'Meks.</html>
MysteryBoxType.STAR_LEAGUE_REGULAR.text=Star League Defence Force Mystery Box
MysteryBoxType.STAR_LEAGUE_REGULAR.toolTipText=<html>This generates a random BattleMek and two to four parts based on the units of the Star League Regular Army.</html>
MysteryBoxType.INNER_SPHERE_EXPERIMENTAL.text=Inner Sphere Experimental Tech Mystery Box
MysteryBoxType.INNER_SPHERE_EXPERIMENTAL.toolTipText=<html>This generates a random experimental Inner Sphere BattleMek and two to four experimental parts based on the current campaign date. <br>Expect weird and wacky technology and new, rare, and/or unusual Inner Sphere 'Meks and parts from this mystery box.</html>
MysteryBoxType.CLAN_KESHIK.text=Clan Keshik Mystery Box
MysteryBoxType.CLAN_KESHIK.toolTipText=<html>This generates a random Clan 'Mek used by their Keshik forces and two to four parts based on the current year. <br>Expect the best technology of the Clans, as used by their elite. <br>This returns a Star League Royal Mystery Box if the current year predates the Clans.</html>
MysteryBoxType.CLAN_FRONT_LINE.text=Clan Front Line Mystery Box
MysteryBoxType.CLAN_FRONT_LINE.toolTipText=<html>This generates a Clan front line 'Mek and two to four parts based on the current year. <br>This returns a Star League Royal Mystery Box if the current year predates the Clans.</html>
MysteryBoxType.CLAN_SECOND_LINE.text=Clan Second Line Mystery Box
MysteryBoxType.CLAN_SECOND_LINE.toolTipText=<html>This generates a Clan second line 'Mek and two to four parts based on the current year. <br>This returns a Star League Defence Force Mystery Box if the current year predates the Clans.</html>
MysteryBoxType.CLAN_EXPERIMENTAL.text=Clan Experimental Tech Mystery Box
MysteryBoxType.CLAN_EXPERIMENTAL.toolTipText=<html>This generates a random experimental Clan BattleMek and two to four experimental Clan parts based on the current campaign date. <br>Expect weird and wacky Clan technology, unusual 'Meks... or maybe just getting them early! <br>This returns an Inner Sphere Experimental Mystery Box if the current year predates the Clans.</html>
# PartGenerationMethod Enum
PartGenerationMethod.DISABLED.text=Disabled
PartGenerationMethod.DISABLED.toolTipText=Part Generation is disabled.
PartGenerationMethod.WINDCHILD.text=Windchild
PartGenerationMethod.WINDCHILD.toolTipText=<html>Windchild's method generates one part for every three in the input, rounded normally. <br>This means you get a single part if you have two to four parts, and another part for each interval above that.</html>
PartGenerationMethod.MISHRA.text=Mishra
PartGenerationMethod.MISHRA.toolTipText=<html>Mishra's method only applies to 'Mek units and isolates based on 'Mek parts. It starts with three parts for every one in the input, then removes all engines before capping the remaining parts based on the following rules. <br>1) All Heat Sinks are capped at 30 per type. <br>2) All 'Mek Heads [Sensors, Life Support] are capped at 2 per weight/type. <br>3) All Gyros are capped at 1 per weight/type. <br>4) MASC is capped at 1 per type. <br>5) Any other parts are capped at 6.</html>
PartGenerationMethod.SINGLE.text=Single Copy
PartGenerationMethod.SINGLE.toolTipText=This returns a part for every part in the input.
PartGenerationMethod.DOUBLE.text=Double Copy
PartGenerationMethod.DOUBLE.toolTipText=This returns two parts for every one in the input.
PartGenerationMethod.TRIPLE.text=Triple Copy
PartGenerationMethod.TRIPLE.toolTipText=This returns three parts for every one in the input.
## Generators
# AbstractCompanyGenerator
AbstractCompanyGenerator.CommandLance.text=\u0020Command Lance
AbstractCompanyGenerator.Company.text=\u0020Company
AbstractCompanyGenerator.Lance.text=\u0020Lance
AbstractCompanyGenerator.CompanyStartupFunding.text=Remaining Company Startup Funding
AbstractCompanyGenerator.CompanyStartupFundedWithoutLoan.report=The company has been founded with an initial float of %s.
AbstractCompanyGenerator.CompanyStartupFundedWithLoan.report=The company has been founded with an initial float of %s and a loan totalling %s.
